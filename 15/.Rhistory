theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
gmyg$Timepoint <- factor(gmyg$Timepoint, levels= c("Before_Amputation" , "Amputated+3d","Amputated+6d", "Regenerated" ))
(p=ggplot(gmyg, aes(y=normexp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
#  facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=exp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
#  facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=exp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
#  facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
scale_y_log10()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=normexp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
#  facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=normexp, x=Timepoint, colour=mean))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
#  facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=normexp, x=Timepoint, colour=mean))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
#  facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
#  theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=exp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
facet_wrap(~name,ncol=2, scales="free")+
theme_minimal()+
scale_y_log10()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
(p=ggplot(gmyg, aes(y=exp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
facet_wrap(~name,ncol=6, scales="free")+
theme_minimal()+
scale_y_log10()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
ggsave(plot=p, filename= "up3timeline.pdf", height=20, width=15)
(p=ggplot(gmyg, aes(y=exp, x=Timepoint))+
geom_point()+
xlab("Timepoint")+ylab("Expression (RPKM)") +
geom_line(aes(group=name), size = 0.8)+
xlab("Timepoint")+ylab("Expression (RPKM)") +
theme(panel.grid.minor.x=element_blank()) +
facet_wrap(~name,ncol=6, scales="free")+
theme_minimal()+
#    scale_y_log10()+
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size=6))+
ggtitle("Expression dynamics during regeneration")+
expand_limits(y=0)
)
ggsave(plot=p, filename= "up3timeline.pdf", height=20, width=15)
fastaprot=read.fasta(file="phaw.3.0.genes.prot.fa")
library(seqinr)
fastaprot=read.fasta(file="phaw.3.0.genes.prot.fa")
str(fastaprot)
fastaprot=read.fasta(file="phaw.3.0.genes.prot.fa")
i <- names(fastaprot) %in% myg$name
cfastaprot <- fastaprot[i]
cfastaprot <- cfastaprot[order(names(cfastaprot))]
q <- summary(cfastaprot)
q <- as.data.frame(q[1:length(myg$rowname)])
s <- paste(myg$name, names(cfastaprot), sep="_")
names(cfastaprot) <- s
write.fasta(cfastaprot,names=names(cfastaprot),file="up3genesprot.fa")
i <- names(fastaprot) %in% myg$name
cfastaprot <- fastaprot[i]
summary(cfastaprot)
fastaprot=read.fasta(file="phaw.3.0.genes.prot.fa")
i <- names(fastaprot) %in% myg$name
cfastaprot <- fastaprot[i]
cfastaprot <- cfastaprot[order(names(cfastaprot))]
write.fasta(cfastaprot,names=names(cfastaprot),file="up3genesprot.fa")
write.csv(myg, file="up3genes.csv")
View(cgTopBlast)
setwd("~/Documents/nstringjul18/1011")
ct1011.raw <- read.markup.RCC()
library(NanoStringNorm)
setwd("~/Documents/nstringjul18/1011")
ct1011.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1213")
ct1213.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1011")
ct1011.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1213")
ct1213.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
ct1415.raw <- read.markup.RCC()
ct1415.raw <- read.markup.RCC()
ct1415.raw <- read.markup.RCC()
ct1415.raw <- read.markup.RCC()
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/1415")
ct1415.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/14")
ct14.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/14")
ct14.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/15")
ct15.raw <- read.markup.RCC()
ct15.raw <- read.markup.RCC()
setwd("~/Documents/nstringjul18/15")
ct15.raw <- read.markup.RCC()
as.data.table(ct15.raw)
data.table(ct15.raw)
data.frame(ct15.raw)
ctg1011.norm <- NanoStringNorm(x = ct1011.raw, anno = NA, CodeCount ='sum', Background ="mean", SampleContent ='housekeeping.sum', round.values = FALSE, take.log = FALSE,return.matrix.of.endogenous.probes = TRUE);
View(ctg1011.norm)
ctg1011.norm <- NanoStringNorm(x = ct1011.raw, anno = NA, CodeCount ='sum', Background ="mean", SampleContent ='housekeeping.sum', round.values = FALSE, take.log = FALSE,return.matrix.of.endogenous.probes = TRUE);
ctg1213.norm <- NanoStringNorm(x = ct1213.raw, anno = NA, CodeCount ='sum', Background ="mean", SampleContent ='housekeeping.sum', round.values = FALSE, take.log = FALSE,return.matrix.of.endogenous.probes = TRUE);
ctg14.norm <- NanoStringNorm(x = ct14.raw, anno = NA, CodeCount ='sum', Background ="mean", SampleContent ='housekeeping.sum', round.values = FALSE, take.log = FALSE,return.matrix.of.endogenous.probes = TRUE);
ctg15.norm <- NanoStringNorm(x = ct15.raw, anno = NA, CodeCount ='sum', Background ="mean", SampleContent ='housekeeping.sum', round.values = FALSE, take.log = FALSE,return.matrix.of.endogenous.probes = TRUE);
View(ctg15.norm)
ct1015.norm <- rbind(ctg1011.norm,ctg1213.norm, ctg14.norm )
ct1015.norm <- cbind(ctg1011.norm,ctg1213.norm, ctg14.norm )
View(ct1015.norm)
library("dplyr", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
ct1015.norm <- cbind(ctg1011.norm,ctg1213.norm, ctg14.norm ) %>%
rownames_to_column()
ct1015.norm <- cbind(ctg1011.norm,ctg1213.norm, ctg14.norm ) %>%
mutate(names=rownames(.))
ct1015.norm <- cbind(ctg1011.norm,ctg1213.norm, ctg14.norm ) %>%
mutate(na=rownames(.))
ct1015.norm <- data.frame(cbind(ctg1011.norm,ctg1213.norm, ctg14.norm), na=rownames(ctg1011))
ct1015.norm <- data.frame(cbind(ctg1011.norm,ctg1213.norm, ctg14.norm), na=rownames(ctg1011.norm))
View(ct1015.norm)
data.frame(ctg15.norm, na= rownames(ctg15.norm))
library("tibble", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
rownames_to_column(ctg15.norm)
rownames_to_column(cbind(ctg1011.norm,ctg1213.norm, ctg14.norm))
ct1015.norm <- rownames_to_column(as.data.frame(cbind(ctg1011.norm,ctg1213.norm, ctg14.norm)) )%>%
left_join(rownames_to_column(as.data.frame(ctg15.norm)))
View(ct1015.norm)
View(ct1015.norm)
sampleinfo <- read.csv("jul18si.csv")
View(sampleinfo)
colnames(ct1015.norm) <- c("marker", sampleinfo$sample)
View(ct1015.norm)
View(sampleinfo)
sampleinfo$sample
sampleinfo <- read.csv("jul18si.csv")
colnames(ct1015.norm) <- c("marker", sampleinfo$sample)
View(ct1015.norm)
View(ct1015.norm)
ct1015.norm <- rownames_to_column(as.data.frame(cbind(ctg1011.norm,ctg1213.norm, ctg14.norm)) )%>%
left_join(rownames_to_column(as.data.frame(ctg15.norm)))
sampleinfo <- read.csv("jul18si.csv")
colnames(ct1015.norm) <- c("marker", sampleinfo$sample)
View(ct1015.norm)
rownames(ct1015.norm) <- ct1015.norm$marker
ct1015.norm$marker <- NULL
colnames(ct1015.norm) <- sampleinfo$sample
View(ct1015.norm)
load(file="nov17main_data.rdata")
load(file="markerchoiceinfo.rdata")
View(minf)
View(sampleinfo)
sampleinfo <- read.csv("jul18si.csv")
log <- sampleinfo$sex =="F" & sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$exp == "Size-age"
bcmin <- ct1015.norm[,log== TRUE]
sampleinfo$exp == "Size-age"
sampleinfo$sex =="F"
sampleinfo$sex
log <- sampleinfo$sex =="F" & sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$exp == "Size-age"
sampleinfo$sex
sampleinfo <- read.csv("jul18si.csv")
View(sampleinfo)
log <- sampleinfo$sex =="F" & sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$exp == "Size-age"
sampleinfo$sex
View(sampleinfo)
?read.csv
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$exp == "Size-age"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
View(bcmin)
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
View(tbc)
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin
sampleinfo <- read.csv("jul18si.csv")
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age"
bcmin <- ct1015.norm[,log== TRUE]
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females): 61 chosen markers")+
theme_minimal() +
scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
library(ggbiplot)
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females): 61 chosen markers")+
theme_minimal() +
scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females): 61 chosen markers")+
theme_minimal() +
scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != "C"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)"+
theme_minimal() +
scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != "C"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)"+
theme_minimal() +
scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
View(bcmin)
minf$name[minf$chosenand]
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != "C"
bcmin <- ct1015.norm[,log== TRUE]
View(bcmin)
View(minf)
rownames(bcmin) %in% minf$name[minf$chosenand ==T]
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
View(bcmin)
rownames(bcmin)[rownames(bcmin) %in% minf$name[minf$chosenand ==T] )]
rownames(bcmin)[rownames(bcmin) %in% minf$name[minf$chosenand ==T] ]
rownames(bcmin) %in% minf$name[minf$chosenand ==T]
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != "C"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
View(bcmin)
minf$name[minf$chosenand ==T]
rownames(bcmin) %in% minf$name[minf$chosenand ==T]
bcmin <- ct1015.norm[,log== TRUE]
rownames(bcmin) %in% minf$name[minf$chosenand ==T]
View(bcmin)
View(bcmin)
bcmin <- ct1015.norm[,log== TRUE]
View(bcmin)
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=FALSE, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=T, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
View(bcmin)
minf$name[minf$chosenand ==T]
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != "C"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=T, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != "C"
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != c("C", "T")
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != c("C", "T", "U")
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != c("C", "T", "U")
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" &sampleinfo$sample != c("C", "T")
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" & !(sampleinfo$sample %in% c("C", "T"))
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" & !(sampleinfo$sample %in% c("C", "T", "U"))
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
log <- sampleinfo$reg == "" & sampleinfo$age != "N" & sampleinfo$ctg !=15 & sampleinfo$exp == "Size-age" & !(sampleinfo$sample %in% c("C", "T", "U", "D"))
bcmin <- ct1015.norm[,log== TRUE]
bcmin.groups <- subset(sampleinfo$type, log==TRUE)
#bcmin <- subset(bcmin, rownames(bcmin) %in% minf$name[minf$chosenand ==T] )
tbc <- t(bcmin)
tbc <- tbc[,colSums(tbc) > 0]
bc.pca <- prcomp(tbc,center = TRUE,scale. = TRUE)
bc.groups <- bcmin.groups
ggbiplot(bc.pca, obs.scale = 1, var.scale = 1, ellipse = FALSE, circle = TRUE, var.axes=F, labels=rownames(tbc), groups=bc.groups)+ggtitle("PCA of Old vs Young (females)")+
theme_minimal() +
#  scale_colour_manual(values=c("cornflower blue", "red3", "black"))+
theme(plot.title=element_text(size=8,face="bold"))
load(file="nov17main_data.rdata")
View(sampleinfo)
write.csv(sampleinfo, file="sinov17.csv")
sampleinfo <- read.csv("jul18si.csv")
load(file="nov17main_data.rdata")
ctall.norm <- cbind(ctg1to9, ct1015.norm)
View(ctall.norm)
ctall.norm <- cbind(ctg1to9, ct1015.norm)
View(ctall.norm)
ctall.norm <- cbind(ctg1to9, as.data.frame(ct1015.norm))
View(ctall.norm)
View(ctall.norm)
ctall.norm <- cbind(ctg1to9, as.data.frame(ct1015.norm))
rownames(ctg1to9)
rownames(ct1015.norm)
ct1015.norm
ctall.norm <- cbind(ctg1to9, as.data.frame(ct1015.norm))
View(ctall.norm)
ctall.norm <- cbind(ctg1to9, ct1015.norm)
View(ctall.norm)
